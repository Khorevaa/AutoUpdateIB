#Использовать "./oscript_modules/logos"
#Использовать "./oscript_modules/advanced-logos"
#Использовать "./src/core/Классы/internal"
#Использовать fs
#Использовать v8runner
#Использовать tempfiles

Перем КлиентRMQ;

Процедура ПодготовитьКлиентаRMQ() Экспорт
	
	КлиентRMQ = Новый КлиентRMQ;


	НастройкаRMQ = Новый Структура;
	НастройкаRMQ.Вставить("Сервер", "localhost");
	НастройкаRMQ.Вставить("Порт", 15672);
	НастройкаRMQ.Вставить("Пользователь", "guest");
	НастройкаRMQ.Вставить("Пароль", "guest");
	НастройкаRMQ.Вставить("ИмяОчереди", "all.update");
	
	КлиентRMQ.УстановитьНастройкиПодключения(НастройкаRMQ);
	КлиентRMQ.УстановитьВиртуальныйХост("%2f");

КонецПроцедуры

Процедура ОтправитьСообщение(Знач ПутьКФайлу)

	ЧтениеТекста = Новый ЧтениеТекста();
	ЧтениеТекста.Открыть(ПутьКФайлу, КодировкаТекста.UTF8);
	ТекстСообщения = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();

	ОсновныеДанные = ТекстСообщения;
	
	СообщениеRMQ = Новый СообщениеRMQ();
	СообщениеRMQ.КлючМаршрутизации = "all.update";
	СообщениеRMQ.ДанныеСообщения = ОсновныеДанные;
	СообщениеRMQ.Параметр("Тип", "update");
	СообщениеRMQ.Параметр("КлючСообщения", Новый УникальныйИдентификатор());
	СообщениеRMQ.Параметр("АдресОтвета", "report.update");
	СообщениеRMQ.Параметр("КодировкаКонтента", "application/json");

	КлиентRMQ.ОтправитьСообщениеRMQ(СообщениеRMQ);

КонецПроцедуры

Функция СоздатьТестовоеОбновление(Знач ИмяБазы)

	ПутьКФайлуШаблону = "./tests/fixtures/one-base.yaml";
	ПутьКФайлуОбновления = "./tests/fixtures/distr/1.1/1Cv8.cfu";
	КаталогФайловойБазы = "./templates/ib/"+ИмяБазы;
	ФС.ОбеспечитьПустойКаталог(КаталогФайловойБазы);

	УправлениеКонфигуратором = Новый УправлениеКонфигуратором;
	УправлениеКонфигуратором.КаталогСборки(ВременныеФайлы.СоздатьКаталог());
	УправлениеКонфигуратором.СоздатьФайловуюБазу(КаталогФайловойБазы);
	УправлениеКонфигуратором.УстановитьКонтекст(СтрШаблон("/F%1", КаталогФайловойБазы), "", "");
	УправлениеКонфигуратором.ЗагрузитьКонфигурациюИзФайла(ОбъединитьПути("tests", "fixtures", "distr", "1.0/1Cv8.cf"), Истина);

	ЧтениеТекста = Новый ЧтениеТекста();
	ЧтениеТекста.Открыть(ПутьКФайлуШаблону, КодировкаТекста.UTF8);
	ТекстYaml = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();

	ТекстYaml = СтрЗаменить(ТекстYaml, "<ТестоваяБаза>", КаталогФайловойБазы);
	
	ЧтениеТекста = Новый ЧтениеТекста();
	
	ЧтениеТекста.Открыть(ПутьКФайлуОбновления + ".md5", КодировкаТекста.UTF8);
	ХешСумма = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();

	ЗагрузитьКонфигурацию = Ложь;
	ПредупрежденияКакОшибки = Ложь;
	ДинамическоеОбновление = Ложь;

	ТекстYaml = СтрЗаменить(ТекстYaml, "<ПутьКФайлуОбновления>", ПутьКФайлуОбновления);
	ТекстYaml = СтрЗаменить(ТекстYaml, "<ХешСумма>", ХешСумма);
	ТекстYaml = СтрЗаменить(ТекстYaml, "<ЗагрузитьКонфигурацию>", XMLСтрока(ЗагрузитьКонфигурацию));
	ТекстYaml = СтрЗаменить(ТекстYaml, "<ПредупрежденияКакОшибки>", XMLСтрока(ПредупрежденияКакОшибки));
	ТекстYaml = СтрЗаменить(ТекстYaml, "<ДинамическоеОбновление>", XMLСтрока(ДинамическоеОбновление));

	Процессор = Новый ПарсерYAML;
	Результат = Процессор.ПрочитатьYaml(ТекстYaml);

	ПроцессорJSon = Новый ПарсерJSON;
	ДанныеСообщения = ПроцессорJSon.ЗаписатьJson(Результат);
	
	ВременныйФайл = ВременныеФайлы.СоздатьФайл(".json");
	ЗаписьТекста = Новый ЗаписьТекста(ВременныйФайл);
	ЗаписьТекста.Записать(ДанныеСообщения);
	ЗаписьТекста.Закрыть();

	Возврат ВременныйФайл;

КонецФункции



Лог = Логирование.ПолучитьЛог("oscript.lib.AutoUpdateIB.rmq");
Лог.УстановитьУровень(УровниЛога.Отладка);
ВыводВКонсоль = Новый ЦветнойВыводЛогаКонсоль();
Лог.ДобавитьСпособВывода(ВыводВКонсоль);
ПодготовитьКлиентаRMQ();


ПутьКФайлу = "./test-base.json";

// ОтправитьСообщение(ПутьКФайлу);

ПутьКФайлу = СоздатьТестовоеОбновление("base1");
ОтправитьСообщение(ПутьКФайлу);

ПутьКФайлу = СоздатьТестовоеОбновление("base2");
ОтправитьСообщение(ПутьКФайлу);

ПутьКФайлу = СоздатьТестовоеОбновление("base3");
ОтправитьСообщение(ПутьКФайлу);

ПутьКФайлу = СоздатьТестовоеОбновление("base4");
ОтправитьСообщение(ПутьКФайлу);
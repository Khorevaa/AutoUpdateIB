#Использовать "../../src/core"
#Использовать yaml
// #Использовать json

// Реализация шагов BDD-фич/сценариев c помощью фреймворка https://github.com/artbear/1bdd
Перем БДД; //контекст фреймворка 1bdd

// Метод выдает список шагов, реализованных в данном файле-шагов
Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;

	ВсеШаги = Новый Массив;

	ВсеШаги.Добавить("ЯСоздаюКлиентRMQ");
	ВсеШаги.Добавить("ЯУстанавливаюНастройкиКлиентRMQСерверПортПользовательПарольВиртуальныйХостОчередь");
	ВсеШаги.Добавить("ЯОтправляюНастройкуОбновленияВОчередь");

	Возврат ВсеШаги;
КонецФункции

// Реализация шагов

// Процедура выполняется перед запуском каждого сценария
Процедура ПередЗапускомСценария(Знач Узел) Экспорт
	
КонецПроцедуры

// Процедура выполняется после завершения каждого сценария
Процедура ПослеЗапускаСценария(Знач Узел) Экспорт
	
КонецПроцедуры

//Я создаю КлиентRMQ
Процедура ЯСоздаюКлиентRMQ() Экспорт
	КлиентRMQ = Новый КлиентRMQ;
	БДД.СохранитьВКонтекст("КлиентRMQ", КлиентRMQ);
КонецПроцедуры

//Я устанавливаю настройки КлиентRMQ сервер "localhost" порт "8080" пользователь "guest" пароль "guest" виртуальный хост "%2f" очередь "all.update"
Процедура ЯУстанавливаюНастройкиКлиентRMQСерверПортПользовательПарольВиртуальныйХостОчередь(Знач АдресСервера, Знач ПортСервера, Знач ПользовательRMQ, Знач ПарольRMQ, Знач ВиртуальныйХост, Знач ИмяОчереди) Экспорт

	НастройкаRMQ = Новый Структура;
	НастройкаRMQ.Вставить("Сервер", АдресСервера);
	НастройкаRMQ.Вставить("Порт", ПортСервера);
	НастройкаRMQ.Вставить("Пользователь", ПользовательRMQ);
	НастройкаRMQ.Вставить("Пароль", ПарольRMQ);
	НастройкаRMQ.Вставить("ИмяОчереди", ИмяОчереди);
	
	КлиентRMQ = БДД.ПолучитьИзКонтекста("КлиентRMQ");
	КлиентRMQ.УстановитьНастройкиПодключения(НастройкаRMQ);
	КлиентRMQ.УстановитьВиртуальныйХост(ВиртуальныйХост);
	БДД.СохранитьВКонтекст("ИмяОчереди", ИмяОчереди);

КонецПроцедуры

//Я отправляю настройку обновления в очередь
//"""
//routing_key: all.update
//properties:
//  type: update
//  message_id: 2d2a9915-e59f-4359-8e3c-f5b29b8a5645
//  reply_to: report.update
//  content_type: application/json
//payload:
//  Версия: 1.0
//  Наименование: 'РИБ Сводная Копия от 12.08.2013'
//  Код: 695
//  СтрокаПодключения:
//    Файл: <ТестоваяБаза>
//    Сервер: localhost
//    ИмяБазыНаСервере: ТестоваяБаза
//    Пользователь: ''
//    Пароль: ''
//  Обновление:
//    НомерРелиза: 1.1
//    Каталог: ./tests/fixtures/distr
//    Файл: ./tests/fixtures/distr/1.1/1cv8.cf
//  НастройкаОбновления:
//    ВерсияПлатформы: 8.3
//    НаСервере: Истина
//    Динамическое: Ложь
//    ПредупрежденияКакОшибки: Ложь
//    ИспользоватьПолныйДистибутив: Ложь
//  ЗагрузитьКонфигурацию: Ложь;
//  КластерПриложений:
//    Пользователь: ''
//    Пароль: ''
//  БлокировкаСеансов:
//    Заблокировать: Истина
//    КодРазрешенияЗапуска: 123
//  ПослеОбновления:
//    ПутьКОбработке: ./tests/fixtures/epf/before-update.epf
//  ПередОбновлением:
//    ПутьКОбработке: ./tests/fixtures/epf/after-update.epf
//"""
Процедура ЯОтправляюНастройкуОбновленияВОчередь(Знач ТекстYaml) Экспорт

	КаталогФайловойБазы = БДД.ПолучитьИзКонтекста("ТестоваяБаза");
	
	ТекстYaml = СтрЗаменить(ТекстYaml, "<ТестоваяБаза>", КаталогФайловойБазы );

	Процессор = Новый ПарсерYAML;
	Результат = Процессор.ПрочитатьYaml(ТекстYaml);

	ОсновныеДанные = Результат["payload"];
	
	СообщениеRMQ = Новый СообщениеRMQ();
	СообщениеRMQ.КлючМаршрутизации = Результат["routing_key"];
	СообщениеRMQ.УстановитьПараметры(Результат["properties"]);
	СообщениеRMQ.ДанныеСообщения = ОсновныеДанные;

	КлиентRMQ = БДД.ПолучитьИзКонтекста("КлиентRMQ");
	КлиентRMQ.ОтправитьСообщениеRMQ(СообщениеRMQ);

	Приостановить(10*1000); // 3 сек задержки

КонецПроцедуры

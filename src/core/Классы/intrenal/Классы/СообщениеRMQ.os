#Использовать json
#Использовать types

Перем ТочкаОбмена Экспорт; // Строка
Перем КлючМаршрутизации Экспорт; // Строка
Перем РазмерКонтента Экспорт; // Число
Перем ТипКонтента Экспорт; // Строка
Перем КодировкаКонтента Экспорт; // Строка
Перем ПовторнаяДоставка Экспорт; // Булево
Перем КоличествоСообщенийПосле Экспорт; // Число
Перем ДанныеСообщения Экспорт; // Строка

Перем Параметры; // Структура
Перем Заголовки; // Соответствие, ключи только строки

Перем ДоступныеСвойстваСообщения;
Перем ДоступныеПараметрыСообщения;

Функция Параметр(Знач ИмяПараметра, Знач ЗначениеПараметра) Экспорт
	
	Параметры[ИмяПараметра] = ЗначениеПараметра;
	
	Возврат ЭтотОбъект;
	
КонецФункции

Функция Параметры() Экспорт

	Возврат КопированиеТипа.Скопировать(Параметры);
	
КонецФункции

Функция Заголовки() Экспорт

	Возврат КопированиеТипа.Скопировать(Заголовки);
	
КонецФункции

Функция ЗначениеПараметра(Знач ИмяПараметра) Экспорт
	
	Значение = Неопределено;
	Параметры.Свойство(ИмяПараметра, Значение);
	Возврат Значение;

КонецФункции

Функция ЗначениеЗаголовка(Знач ИмяЗаголовка) Экспорт
	
	Возврат Заголовки[ИмяЗаголовка];

КонецФункции

Функция Заголовок(Знач ИмяЗаголовка, Знач ЗначениеЗаголовка) Экспорт
	
	Заголовки.Вставить(ИмяЗаголовка, ЗначениеЗаголовка);
	
	Возврат ЭтотОбъект;
	
КонецФункции

Процедура ИзСоответствия(ВходящееСоответствие) Экспорт
	
	МассивСвойствОбъекта = СтрРазделить("exchange, redelivered, payload_bytes, payload_encoding, message_count, routing_key, payload", ", ");
	
	Для каждого СвойствоОбъекта Из МассивСвойствОбъекта Цикл
		
		ИмяКлюча = ДоступныеПараметрыСообщения[СвойствоОбъекта];
		ЗначениеКлюча = ВходящееСоответствие[СвойствоОбъекта];
		
		УстановитьСвойствоОбъекта(ЭтотОбъект, ИмяКлюча, ЗначениеКлюча);
		
	КонецЦикла;
	
	ВходящиеПараметры = ВходящееСоответствие["properties"];
	
	МассивПараметровОбъекта = СтрРазделить("content_type, content_encoding, priority, correlation_id, reply_to, expiration, message_id, timestamp, type, user_id, app_id, cluster_id", ", ");
	
	Для каждого ПараметрОбъекта Из МассивПараметровОбъекта Цикл
		
		ИмяКлюча = ДоступныеСвойстваСообщения[ПараметрОбъекта];
		ЗначениеКлюча = ВходящееСоответствие[ПараметрОбъекта];
		
		УстановитьСвойствоОбъекта(Параметры, ИмяКлюча, ЗначениеКлюча);
		
	КонецЦикла;
	
	ВходящиеЗаголовки = ВходящееСоответствие["headers"];
	УстановитьСвойствоОбъекта(ЭтотОбъект, "Заголовки", ВходящиеЗаголовки);

КонецПроцедуры

Процедура ИзJSON(Знач JSONСообщение) Экспорт
	
	Парсер = Новый ПарсерJSON;
	Результат = Парсер.ПрочитатьJSON(JSONСообщение);
	
	ИзСоответствия(Результат);
	
КонецПроцедуры

Процедура УстановитьСвойствоОбъекта(ПриемникСвойств, Знач ИмяСвойства, Знач ЗначениеСвойства)
	
	Если ПроверкаТипа.ЭтоЛюбаяСтруктура(ПриемникСвойств)
		Или ПроверкаТипа.ЭтоЛюбоеСоответствие(ПриемникСвойств) Тогда
		
		ПриемникСвойств.Вставить(ИмяСвойства, ЗначениеСвойства);
		
	Иначе
		
		Если ЗначениеСвойства = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ЭтотОбъект[ИмяСвойства] = ЗначениеСвойства;

	КонецЕсли;
	
КонецПроцедуры

Функция ВСоответствие() Экспорт
	
	СоответствиеОбъекта = Новый Структура();
	
	Для каждого СвойствоОбъекта Из ДоступныеСвойстваСообщения Цикл
		
		Если СвойствоОбъекта.Ключ = "properties" Тогда
			Продолжить;
		КонецЕсли;

		СоответствиеОбъекта.Вставить(СвойствоОбъекта.Ключ, ЭтотОбъект[СвойствоОбъекта.Значение]);

	КонецЦикла;
	
	СтруктураПараметров = Новый Структура;

	Для каждого ПараметрыОбъекта Из ДоступныеПараметрыСообщения Цикл
		
		СтруктураПараметров.Вставить(ПараметрыОбъекта.Ключ, Параметры[ПараметрыОбъекта.Значение]);

	КонецЦикла;
	
	СоответствиеОбъекта.Вставить("properties", СтруктураПараметров);
	СоответствиеОбъекта.Вставить("headers", Заголовки);

	Возврат СоответствиеОбъекта;

КонецФункции

Функция ВJSON() Экспорт
	
	ОбъектСериализации = ВСоответствие();

	ПарсерJSON = Новый ПарсерJSON;
	ТекстJSON = ПарсерJSON.ЗаписатьJSON(ОбъектСериализации);
	
	Возврат ТекстJSON;
	
КонецФункции

Процедура ПриСозданииОбъекта()
	
	Параметры = Новый Структура();
	Заголовки = Новый Соответствие();
	ДоступныеСвойстваСообщения = СтруктураСвойствСообщения();
	ДоступныеПараметрыСообщения = СтруктураПараметровСообщения();
	
	ТочкаОбмена = "";
	КлючМаршрутизации = "";
	РазмерКонтента = 0;
	ТипКонтента = "";
	КодировкаКонтента = "";
	ПовторнаяДоставка = Ложь;
	КоличествоСообщенийПосле = 0;
	
КонецПроцедуры

Функция СтруктураСвойствСообщения()
	
	СтруктураКлючей = Новый Структура();
	СтруктураКлючей.Вставить("exchange", "ТочкаОбмена");
	СтруктураКлючей.Вставить("redelivered", "ПовторнаяДоставка");
	СтруктураКлючей.Вставить("payload_bytes", "РазмерКонтента");
	СтруктураКлючей.Вставить("payload_encoding", "КодировкаКонтента");
	СтруктураКлючей.Вставить("payload", "ДанныеСообщения");
	СтруктураКлючей.Вставить("message_count", "КоличествоСообщенийПосле");
	СтруктураКлючей.Вставить("routing_key", "КлючМаршрутизации");
	СтруктураКлючей.Вставить("properties", "Параметры");
	СтруктураКлючей.Вставить("headers", "Заголовки");
	
	// TODO: Сделать обратную связь
	
	Возврат СтруктураКлючей;
	
КонецФункции

Функция СтруктураПараметровСообщения()
	
	СтруктураКлючей = Новый Структура();
	СтруктураКлючей.Вставить("content_type", "ТипКонтента");
	СтруктураКлючей.Вставить("content_encoding", "КодировкаКонтента");
	СтруктураКлючей.Вставить("priority", "Приоритет");
	СтруктураКлючей.Вставить("correlation_id", "КлючСоотвествия");
	СтруктураКлючей.Вставить("reply_to", "АдресОтвета");
	СтруктураКлючей.Вставить("expiration", "ВремяЖизниСообщения");
	СтруктураКлючей.Вставить("message_id", "КлючСообщения");
	СтруктураКлючей.Вставить("timestamp", "МоментВремени");
	СтруктураКлючей.Вставить("type", "Тип");
	СтруктураКлючей.Вставить("user_id", "КлючПользователя");
	СтруктураКлючей.Вставить("app_id", "КлючПриложения");
	СтруктураКлючей.Вставить("cluster_id", "КлючКластера");
	
	// TODO: Сделать обратную связь
	
	Возврат СтруктураКлючей;
	
КонецФункции
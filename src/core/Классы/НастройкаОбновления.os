
#Использовать logos
#Использовать configor

Перем ЛогНастройки; // Класс Логирование
Перем НаименованиеНастройки; // Наименование настройки для обновления

Перем БлокировкаСеансов Экспорт; // Булево, признак блокировки пользователей
Перем ЗагрузкаКонфигурацииВместоОбновления Экспорт; // Булево

Перем ПутьКОбновлению Экспорт; // Строка, путь к файлу или каталогу содержащему обновление
Перем ИспользоватьПолныйДистрибутив Экспорт;
Перем СтрокаПодключения Экспорт; // Строка
Перем АвторизацияВИнфомарционнойБазе Экспорт; // Структура 
Перем КлючРазрешенияЗапуска Экспорт; // Строка
Перем ВерсияПлатформы Экспорт; // Строка 
Перем ПутьКОбработкеПередОбновлением Экспорт; // Путь к файлу обработки перед обновлением 
Перем ПутьКОбработкеПослеОбновления Экспорт; // Путь к файлу обработки перед обновлением 

// Настройки обновления

Перем ПредупрежденияКакОшибки Экспорт; // Булево
Перем НаСервере Экспорт; // Булево
Перем ДинамическоеОбновление Экспорт; // Булево
Перем ИмяРасширения Экспорт; // Строка

Перем Параметры;
// Настройка подключения к кластеру

Перем НастройкаКластера Экспорт;

Перем ПроцессорВыводаЛогаВТаблицуЗначений;

Функция ПередОбновлением() Экспорт
	
	Возврат ЗначениеЗаполнено(ПутьКОбработкеПередОбновлением);

КонецФункции

// Устанавливает параметры авторизации в хранилище конфигурации 1С
//
// Параметры:
//   Пользователь - Строка - пользователь хранилища конфигурации 1С
//   Пароль - Строка - пароль пользователя хранилища конфигурации 1С
//
// Возвращаемое значение:
//   Объект.МенеджерСинхронизации - ссылка на текущий объект класса <МенеджерСинхронизации>
//
Функция АвторизацияВИнфомарционнойБазе(Знач Пользователь, Знач Пароль) Экспорт

	АвторизацияВИнфомарционнойБазе.Вставить("Пользователь" , Пользователь);
	АвторизацияВИнфомарционнойБазе.Вставить("Пароль", Пароль);

	Возврат ЭтотОбъект;

КонецФункции

Процедура ИзСоответствия(ВходящееСоответствие) Экспорт
	
	
	КонструкторВерсии = КонструкторВерсии();
	КонструкторВерсии.ИзСоответствия(ВходящееСоответствие);
	СтруктураВерсии = КонструкторВерсии.ВСтруктуру();

	ВерсияНастройки = СтруктураВерсии.Версия;

	ИндексЗначений = Новый ИндексЗначений;

	Если ВерсияНастройки = "1.0" Тогда

		КонструкторПараметров = КонструкторПараметровВерсии10();
		КонструкторПараметров.ИзСоответствия(ВходящееСоответствие);
		СоответствиеПараметров = КонструкторПараметров.ВСоответствие();
		ИндексЗначений.Коллекция(СоответствиеПараметров);
		ПрочитатьНастройкиПоВерсии10(ИндексЗначений);

	Иначе
		ВызватьИсключение "Не корректные настройки обновления";
	КонецЕсли;

КонецПроцедуры

Процедура ПрочитатьНастройкиПоВерсии10(ИндексЗначений)
	
	ФайловыйПуть = ИндексЗначений.Значение("НастройкаПодключения.Файл");
	Если ЗначениеЗаполнено(ФайловыйПуть) Тогда
		СтрокаПодключения = СтрШаблон("/F%1", ФайловыйПуть);
	Иначе
		СерверПриложений = ИндексЗначений.Значение("НастройкаПодключения.Сервер");
		ИмяБазыНаСервере = ИндексЗначений.Значение("НастройкаПодключения.ИмяБазыНаСервере");
		СтрокаПодключения = СтрШаблон("/S""%1\%2""", СерверПриложений, ИмяБазыНаСервере);
	КонецЕсли;

	Пользователь = ИндексЗначений.Значение("НастройкаПодключения.Пользователь");
	Если ЗначениеЗаполнено(Пользователь) Тогда
		Пароль = ИндексЗначений.Значение("НастройкаПодключения.Пароль");
		Если Пароль = Неопределено Тогда
			Пароль = "";
		КонецЕсли;
		АвторизацияВИнфомарционнойБазе(Пользователь, Пароль);
	КонецЕсли;

	ВерсияПлатформы = ЗначениеИзИндекса(ИндексЗначений, "НастройкаОбновления.ВерсияПлатформы", "8.3");
	НаСервере = ЗначениеИзИндекса(ИндексЗначений, "НастройкаОбновления.НаСервере", НаСервере);
	ДинамическоеОбновление = ЗначениеИзИндекса(ИндексЗначений, "НастройкаОбновления.Динамическое", ДинамическоеОбновление);
	ПредупрежденияКакОшибки = ЗначениеИзИндекса(ИндексЗначений, "НастройкаОбновления.ПредупрежденияКакОшибки", ПредупрежденияКакОшибки);
	ИспользоватьПолныйДистрибутив = ЗначениеИзИндекса(ИндексЗначений, "НастройкаОбновления.ИспользоватьПолныйДистрибутив", ИспользоватьПолныйДистрибутив);
	
	ЗагрузкаКонфигурацииВместоОбновления = ЗначениеИзИндекса(ИндексЗначений, "ЗагрузитьКонфигурацию", ЗагрузкаКонфигурацииВместоОбновления);
	ПутьКОбработкеПередОбновлением = ЗначениеИзИндекса(ИндексЗначений, "ПередОбновлением.ПутьКОбработке", "");
	ПутьКОбработкеПослеОбновления = ЗначениеИзИндекса(ИндексЗначений, "ПослеОбновления.ПутьКОбработке", "");

	БлокировкаСеансов = ЗначениеИзИндекса(ИндексЗначений, "БлокировкаСеансов.Заблокировать", БлокировкаСеансов);
	КлючРазрешенияЗапуска = ЗначениеИзИндекса(ИндексЗначений, "БлокировкаСеансов.КодРазрешенияЗапуска", КлючРазрешенияЗапуска);

	ПутьКФайлуОбновления = ЗначениеИзИндекса(ИндексЗначений, "Обновление.Файл", "");

	Если ЗначениеЗаполнено(ПутьКФайлуОбновления) Тогда
		ПутьКОбновлению = ПутьКФайлуОбновления;
	Иначе
		НомерРелиза = ЗначениеИзИндекса(ИндексЗначений, "Обновление.НомерРелиза", "");
		КаталогОбновлений = ЗначениеИзИндекса(ИндексЗначений, "Обновление.Каталог", "");

		ПутьКОбновлению = ОбъединитьПути(КаталогОбновлений, НомерРелиза);

	КонецЕсли;

КонецПроцедуры

Функция ЗначениеИзИндекса(Индекс, ИмяПараметра, ЗначениеПоУмолчанию)
	
	ЗначениеИзИндекса = Индекс.Значение(ИмяПараметра);

	Если НЕ ЗначениеИзИндекса = Неопределено Тогда
		Возврат ЗначениеИзИндекса;
	КонецЕсли;

	Возврат ЗначениеПоУмолчанию;

КонецФункции

Функция ПослеОбновления() Экспорт
	
	Возврат ЗначениеЗаполнено(ПутьКОбработкеПослеОбновления);

КонецФункции

Функция ИмяЛога() Экспорт
	Возврат СтрШаблон("oscript.app.AutoUpdateIB.%1", НаименованиеНастройки);
КонецФункции

Функция Лог() Экспорт
	Возврат ЛогНастройки;
КонецФункции

Функция ТаблицаЛогов() Экспорт
	Возврат ПроцессорВыводаЛогаВТаблицуЗначений.ПолучитьТаблицуЛога();
КонецФункции

Процедура ДобавитьСпособВывода(ПроцессорВывода) Экспорт
	ЛогНастройки.ДобавитьСпособВывода(ПроцессорВывода);
КонецПроцедуры

#Область Интерфейс_конструктора_параметров

Функция КонструкторПараметровВерсии10()

	Конструктор = Новый КонструкторПараметров(Новый Соответствие, "Версия10");

	НастройкаПодключения = Конструктор.НовыеПараметры("НастройкаПодключения");
	НастройкаПодключения
		.ПолеСтрока("Файл ПутьККаталогуБазы file", "")
		.ПолеСтрока("Сервер ИмяСервера server", "")
		.ПолеСтрока("ИмяБазыНаСервере ИмяБазы ib-name", "")
		.ПолеСтрока("Пользователь user usr", "")
		.ПолеСтрока("Пароль password pwd", "")
		;
	
	Обновление = Конструктор.НовыеПараметры("Обновление");
	Обновление
		.ПолеСтрока("НомерРелиза Релиз release release-number number", "")
		.ПолеСтрока("Каталог КаталогОбновлений update-dir", "")
		.ПолеСтрока("Файл ФайлОбновления file cf cfu update-file", "")
		;

	НастройкаОбновления = Конструктор.НовыеПараметры("НастройкаОбновления");
	НастройкаОбновления
		.ПолеСтрока("ВерсияПлатформы v8version v8", "8.3")
		.ПолеБулево("НаСервере server Server update-on-server", Истина)
		.ПолеБулево("Динамическое ДинамическоеОбновление dynamic Dynamic", Ложь)
		.ПолеБулево("ПредупрежденияКакОшибки warnings-as-errors WarningsAsErrors", Ложь)
		.ПолеБулево("ИспользоватьПолныйДистрибутив ДинамическоеОбновление dynamic", Ложь)
		.ПолеБулево("ЗагрузитьКонфигурацию load-cf", Ложь)
		;
	
	КластерПриложений = Конструктор.НовыеПараметры("КластерПриложений");
	КластерПриложений
		.ПолеСтрока("Пользователь user usr", "")
		.ПолеСтрока("Пароль password pwd", "")
		.ПолеСтрока("Порт port", 1542)
		;

	БлокировкаСеансов = Конструктор.НовыеПараметры("БлокировкаСеансов");
	БлокировкаСеансов
		.ПолеБулево("Заблокировать block-session block-users block-ib", Ложь)
		.ПолеСтрока("КодРазрешенияЗапуска uc uc-code", "")
		;
	Конструктор
		.ПолеСтрока("Версия version config-version", "")
		.ПолеСтрока("Наименование name ib-name", "")
		.ПолеСтрока("Код code ib-code", "")
		.ПолеБулево("ЗагрузитьКонфигурацию load-cf", Ложь)
		.ПолеОбъект("НастройкаПодключения СтрокаПодключения connect-config", НастройкаПодключения)
		.ПолеОбъект("Обновление update release-update", Обновление)
		.ПолеОбъект("НастройкаОбновления update-config", НастройкаОбновления)
		.ПолеОбъект("КластерПриложений cluster cluster-config", КластерПриложений)
		.ПолеОбъект("БлокировкаСеансов session session-config", БлокировкаСеансов)
		;
	
	Возврат Конструктор;

КонецФункции

Функция КонструкторВерсии()
	
	Конструктор = Новый КонструкторПараметров(Новый Соответствие, "Версия");
	Конструктор.ПолеСтрока("Версия version config-version", "")
	;

	Возврат Конструктор;

КонецФункции

#КонецОбласти

Процедура ПриСозданииОбъекта(Знач Наименование)
	
	НаименованиеНастройки = Наименование;
	ЛогНастройки = Логирование.ПолучитьЛог(ИмяЛога());
	ПроцессорВыводаЛогаВТаблицуЗначений = Новый ВыводЛогаВТаблицуЗначений;
	ЛогНастройки.ДобавитьСпособВывода(ПроцессорВыводаЛогаВТаблицуЗначений);
	АвторизацияВИнфомарционнойБазе = Новый Структура("Пользователь, Пароль", "", "");
		
	БлокировкаСеансов = Ложь;
	ЗагрузкаКонфигурацииВместоОбновления = Ложь;
	ИспользоватьПолныйДистрибутив = Истина;

	ПредупрежденияКакОшибки = Ложь;
	НаСервере = Истина; 
	ДинамическоеОбновление = Ложь;
	ИмяРасширения = "";

	НастройкаКластера = Новый Структура("Пользователь, Пароль, Порт", "", "", 1545);

КонецПроцедуры



//////////////////////////////////////////////////////////////////////////
// Работа с командными файлами

#Использовать logos

Перем Лог;

Перем ПараллельныеПроцессы;

Перем КомандаПроцесса;
Перем ПараметрыКоманды;

Процедура ДобавитьКомандуДляПроцесса(Команда, Параметры)
	КомандаПроцесса = Команда;
	ПараметрыКоманды = ПараметрыКоманды;
КонецПроцедуры

Процедура ЗапуститьПаралельно(КоличествоПроцессов = 0)
	
	ОчиститьЗавешенныеПроцессы();

	КоличествоРаботающихПроцессов = ПараллельныеПроцессы.Количество();

	Если КоличествоРаботающихПроцессов >= КоличествоПроцессов Тогда
		Возврат;
	КонецЕсли;

	Для Счетчик = 1 По КоличествоПроцессов - КоличествоРаботающихПроцессов Цикл
		
		Команда = Новый ПараллельнаяКоманда;
		Команда.УстановитьКоманду(Команда);
		Команда.ДобавитьПараметры(ПараметрыКоманды);

		ПроцессКоманды = Команда.ЗапуститьПроцесс();
		ПараллельныеПроцессы.Вставить(ПроцессКоманды, Команда);

	КонецЦикла;

КонецПроцедуры

Процедура ОчиститьЗавешенныеПроцессы()

	Если ПараллельныеПроцессы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	МассивОчистки = Новый Массив;

	Для каждого ПроцессКоманды Из ПараллельныеПроцессы Цикл
		
		Если ПроцессКоманды.Ключ.Завершен Тогда
			МассивОчистки.Добавить(ПроцессКоманды);
		КонецЕсли;

	КонецЦикла;

	Для каждого ОчищаемыйПроцесс Из МассивОчистки Цикл
		ПараллельныеПроцессы.Удалить(ПроцессКоманды);
	КонецЦикла;

	Лог.Отладка("Очищено <%1> завершенных процессов", МассивОчистки.Количество());

КонецПроцедуры

Процедура ПриСозданииОбъекта()
	
	ПараллельныеПроцессы = Новый Соответствие;
	КомандаПроцесса = "";
	ПараметрыКоманды = Новый Массив;
	Лог = Логирование.ПолучитьЛог("oscript.app.AutoUpdate1C.agent.processes");

КонецПроцедуры


// Лог.УстановитьУровень(УровниЛога.Отладка);

#Использовать logos

Перем Лог;

Перем МаксимальноеКоличествоАгентов;
Перем ПараметрыАгента;
Перем ТаймерПовторенияОпроса;
Перем ТаймаутПроцессаАгента;
Перем ПараллельныеПроцессы;

Перем МенеджерУправленияПроцессами;

Процедура УстановитьКоличествоАгентов(Знач НовоеМаксимальноеКоличествоАгентов) Экспорт
	МаксимальноеКоличествоАгентов = НовоеМаксимальноеКоличествоАгентов;
КонецПроцедуры

Процедура УстановитьПараметрыАгента(Знач НовыеПараметрыАгента) Экспорт
	ПараметрыАгента = НовыеПараметрыАгента;
КонецПроцедуры

Процедура УстановитьТаймерОпроса(Знач НовыйТаймерПовторенияОпроса) Экспорт
	ТаймерПовторенияОпроса = НовыйТаймерПовторенияОпроса;
КонецПроцедуры

Процедура УстановитьТаймаутПроцессаАгента(Знач НовыйТаймаутПроцессаАгента) Экспорт
	ТаймаутПроцессаАгента = НовыйТаймаутПроцессаАгента;
КонецПроцедуры

// Выполняет пакетную синхронизацию
//
Процедура Запустить() Экспорт
	
	Пока Истина Цикл

		ОчиститьЗавешенныеПроцессы();

		ОпроситьПроцессыПоТаймауту();

		ЗапуститьАгентовПриНеобходимости();

		Если ТаймерПовторенияОпроса <= 0 Тогда

			Прервать;

		Иначе
			
			Лог.Информация("Ожидаем <%1> секунд перед новым циклом", ТаймерПовторения);
			Приостановить(ТаймерПовторения * 1000);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Процедура ЗапуститьАгентовПриНеобходимости()

	КоличествоСообщенийВОчереди = ОчередьRMQ.КоличествоСообщенийВОчереди();

	Если КоличествоСообщенийВОчереди = 0 Тогда
		Возврат;
	КонецЕсли;

	КомандаПроцессаАгента = СтартовыйСценарий().Путь;

	КоличествоПроцессов = Мин(МаксимальноеКоличествоАгентов, КоличествоСообщенийВОчереди);

	ЗапуститьПаралельно(КоличествоПроцессов);

КонецПроцедуры

Процедура ОпроситьПроцессыПоТаймауту()

	ИзмененияЛогов = ПолучитьДатыИзмененияЛогов();

	Для каждого КлючЗначение Из ИзмененияЛогов Цикл
		
		ИдентификаторАгента = ПроцессКоманды.Ключ;
		ДатаИзменения = КлючЗначение.Значение;

		Если ДатаИзменения + ТаймаутПроцессаАгента < ТекущаяДата() Тогда
			ЗавершитьПроцессаАгента(ИдентификаторАгента);
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Процедура ЗавершитьПроцессаАгента(ПроцессАгента)

	Если Не ПроцессАгента.Завершен Тогда
		ПроцессАгента.Завершить();
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДатыИзмененияЛогов()
	
	ИзмененияЛогов = Новый Соответствие;

	Для каждого ПроцессКоманды Из ПараллельныеПроцессы Цикл
		
		ИдентификаторАгента = ПроцессКоманды.Ключ;
		ДатаИзмененияЛогаПроцесса = ПолучитьДатуИзмененияЛогаПоКлючу(ИдентификаторАгента);

		ИзмененияЛогов.Вставить(ИдентификаторАгента, ДатаИзмененияЛогаПроцесса);

	КонецЦикла;

	Возврат ИзмененияЛогов;

КонецФункции

Функция ПолучитьДатуИзмененияЛогаПоКлючу(КлючПроцессаАгента)
	
	Возврат ПолучитьДатуИзмененияФайла(КлючПроцессаАгента);

КонецФункции

Функция ПолучитьДатуИзмененияФайла(ИмяФайла)
	
	//TODO: Сделать проверку через файл

	Возврат ТекущаяДата();

КонецФункции

Процедура ЗапуститьПаралельно(КоличествоПроцессов = 0)

	ОчиститьЗавешенныеПроцессы();

	КоличествоРаботающихПроцессов = ПараллельныеПроцессы.Количество();

	Если КоличествоРаботающихПроцессов >= КоличествоПроцессов Тогда
		Возврат;
	КонецЕсли;

	Для Счетчик = 1 По КоличествоПроцессов - КоличествоРаботающихПроцессов Цикл
		
		ИдентификаторАгента = Новый УникальныйИдентификатор;

		Команда = Новый ПараллельнаяКоманда;
		Команда.УстановитьКоманду(КомандаПроцессаАгента);
		Команда.ДобавитьПараметры(ПараметрыАгента);
		Команда.ДобавитьПараметр(ИдентификаторАгента);

		ПроцессКоманды = Команда.ЗапуститьПроцесс();
		
		ПараллельныеПроцессы.Вставить(ИдентификаторАгента, ПроцессКоманды);

	КонецЦикла;

КонецПроцедуры

Процедура ОчиститьЗавешенныеПроцессы()

	Если ПараллельныеПроцессы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	МассивОчистки = Новый Массив;

	Для каждого ПроцессКоманды Из ПараллельныеПроцессы Цикл
		
		Если ПроцессКоманды.Значение.Завершен Тогда
			МассивОчистки.Добавить(ПроцессКоманды.Ключ);
		КонецЕсли;

	КонецЦикла;

	Для каждого ОчищаемыйПроцесс Из МассивОчистки Цикл
		ПараллельныеПроцессы.Удалить(ОчищаемыйПроцесс);
	КонецЦикла;

	Лог.Отладка("Очищено <%1> завершенных процессов", МассивОчистки.Количество());

КонецПроцедуры

Процедура ПриСозданииОбъекта()
	
	СИ = Новый СистемнаяИнформация;
	
	МаксимальноеКоличествоАгентов = СИ.КоличествоПроцессоров - 1;

	ТаймерПовторенияОпроса = 3600;
	ТаймаутПроцессаАгента = 60*60*6; // 6 Часов

	МенеджерУправленияПроцессами = Новый УправлениеПроцессами();

	ПараллельныеПроцессы = Новый Соответствие;
	
	Лог = Логирование.ПолучитьЛог("oscript.app.AutoUpdate1C.agent.processes");


КонецПроцедуры

Процедура ЗапуститьПроцесс()
	
КонецПроцедуры



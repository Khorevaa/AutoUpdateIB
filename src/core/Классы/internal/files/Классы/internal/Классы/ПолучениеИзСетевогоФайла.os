#Использовать fs
#Использовать logos
#Использовать tempfiles

Перем ПутьКФайлу;
Перем ХешФайла;
Перем ХешСуммаСтрокой;

Перем ПутьКВременномуФайлу;

Перем Лог;

Функция ХешФайла() Экспорт
	
	Если ЗначениеЗаполнено(ХешСуммаСтрокой) Тогда
		Возврат ХешСуммаСтрокой;
	КонецЕсли;
	
	ХешСуммаСтрокой = ХешФайла.ХешСуммаСтрокой();
	
	Возврат ХешСуммаСтрокой;
	
КонецФункции

Функция ХешФункция() Экспорт
	Возврат ХешФайла.ХешФункция();
КонецФункции

Функция Используется() Экспорт
	Возврат ЗначениеЗаполнено(ПутьКФайлу);
КонецФункции

Процедура Параметры(ВходящиеПараметры) Экспорт
	
	Лог.Отладка("Устанавливаю параметры (тип: <%1>) получения файла по пути", ТипЗнч(ВходящиеПараметры));

	Если ВходящиеПараметры = Неопределено Тогда
		Лог.Отладка("Неопределенны входящие параметры получения файла по пути");
		Возврат;
	КонецЕсли;
			
	КонструкторПараметров = ПолучитьКонструкторПараметров();
	
	КонструкторПараметров.ИзСоответствия(ВходящиеПараметры);

	СтруктураПараметров = КонструкторПараметров.ВСтруктуру();

	ПутьКФайлу = СтруктураПараметров.ПутьКФайлу;
	Лог.Отладка("Установлен путь к сетевому файлу <%1>", ПутьКФайлу);
	ПараметрыХеша = СтруктураПараметров.ХешФайла;
	
	Лог.Отладка("Формирую параметры хеша получения файла по пути");
	
	Если ПустаяСтрока(ПараметрыХеша.Сумма) Тогда
		
		ПараметрыХеша.Функция = Строка(ХешФункция.MD5);
		ПараметрыХеша.Сумма = РассчитатьХешФайла(Получить(), ХешФункция.MD5);
		
	КонецЕсли;

	ХешФайла = Новый ПараметрыХешаФайла();
	ХешФайла.Настроить(ПараметрыХеша);
	
КонецПроцедуры

Функция Получить() Экспорт
	
	Если ЗначениеЗаполнено(ПутьКВременномуФайлу) Тогда
		Возврат ПутьКВременномуФайлу;
	КонецЕсли;

	ФайлПолучения = Новый Файл(ПутьКФайлу);
	
	Если ФайлПолучения.ЭтоКаталог() Тогда
			ТекстСообщения = СтрШаблон(
			"Передан каталог вместо файла: %1",
			ФайлПолучения.ПолноеИмя
		);
		ИнфИсключение = Новый ИнформацияОбОшибке(ТекстСообщения, ХешФайла());
		ВызватьИсключение ИнфИсключение;
		
	КонецЕсли;

	ВременныйФайл = ВременныеФайлы.НовоеИмяФайла(ФайлПолучения.Расширение);

	КопироватьФайл(ФайлПолучения.ПолноеИмя, ВременныйФайл);

	ПутьКВременномуФайлу = ВременныйФайл;
	
	Возврат ВременныйФайл;

КонецФункции

Функция РассчитатьХешФайла(Знач ПутьКФайлуРасчета, Знач ФункцияХеша)

	ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ПутьКФайлуРасчета);
	Возврат ПолучитьХешФайла(ДвоичныеДанныеФайла, ФункцияХеша);

КонецФункции

Функция ПолучитьХешФайла(ДвоичныеДанныеФайла, Знач ФункцияХеша)
	
	ХешированиеДанных = Новый ХешированиеДанных(ФункцияХеша);
	ХешированиеДанных.Добавить(ДвоичныеДанныеФайла);
	ХешСуммаСтрокой = ХешированиеДанных.ХешСуммаСтрокой;
	ХешированиеДанных.Очистить();
	
	Возврат ХешСуммаСтрокой;
	
КонецФункции

Функция ПолучитьКонструкторПараметров()
	
	КонструкторПараметров = Новый КонструкторПараметров;
	
	КонструкторПараметров 
		.ПолеСтрока("ПутьКФайлу path", "")
		.ПолеОбъект("ХешФайла hash", Новый ПараметрыХешаФайла)
		;
		
	Возврат КонструкторПараметров;
	
КонецФункции

Процедура ОписаниеПараметров(Конструктор) Экспорт
	
	Конструктор = ПолучитьКонструкторПараметров();
	
КонецПроцедуры

Процедура ПриСозданииОбъекта()
	
	ПутьКФайлу = "";
	ПутьКВременномуФайлу = "";
	
	Лог = Логирование.ПолучитьЛог("oscript.app.AutoUpdateIB.file-copy");
//	Лог.УстановитьУровень(УровниЛога.Отладка);
	
КонецПроцедуры
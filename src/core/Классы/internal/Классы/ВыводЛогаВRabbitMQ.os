//////////////////////////////////////////////////////////////////////////
//
// LOGOS: вывод в таблицу логов
//
//////////////////////////////////////////////////////////////////////////

#Использовать logos
#Использовать datetime 

Перем КлиентRMQ;
Перем КлючСоответствия;
Перем КлючМаршрутизации;
Перем JSONФорматЛога;

Процедура ВывестиСобытие(Знач СобытиеЛога) Экспорт
	
	Сообщение = СобытиеЛога.ПолучитьСообщение();
	УровеньСообщения = СобытиеЛога.ПолучитьУровень();

	ДополнительныеПоля = СобытиеЛога.ПолучитьДополнительныеПоля();

	КлючTime = ДополнительныеПоля["time"]; // Поле подмены времени события в дополнительных полях
	Если КлючTime = Неопределено Тогда
		ДатаСобытияВМилисекундах = СобытиеЛога.ПолучитьВремяСобытия();
		ДатаВСекундах = ДатаСобытияВМилисекундах/1000;
		ДатаСобытия = Дата("00010101") + ДатаВСекундах;
	Иначе
		ДатаСобытия = ПрочитатьДатуJSON(КлючTime, "yyyy-MM-ddTHH:mm:ssZ");
	КонецЕсли;

	ФорматированноеСообщение = JSONФорматЛога.ПолучитьФорматированноеСообщение(СобытиеЛога);

	ОтправитьСообщение(ДатаСобытия, ФорматированноеСообщение);

КонецПроцедуры

Процедура Закрыть() Экспорт
	КлиентRMQ = Неопределено;
	JSONФорматЛога = Неопределено;
КонецПроцедуры

Процедура УстановитьКлючСоответствия(Знач ПКлючСоответствия) Экспорт
	КлючСоответствия = ПКлючСоответствия;
КонецПроцедуры

Процедура УстановитьКлючМаршрутизации(Знач ПКлючМаршрутизации) Экспорт
	КлючМаршрутизации = ПКлючМаршрутизации;
КонецПроцедуры

Процедура ПриСозданииОбъекта(Знач НастройкаRMQ)

	КлиентRMQ  = Новый КлиентRMQ();
	КлиентRMQ.УстановитьНастройкиПодключения(НастройкаRMQ);
	JSONФорматЛога = Новый JSONФорматЛога;
	
КонецПроцедуры

Процедура ОтправитьСообщение(Знач ДатаСобытия, Знач ФорматированноеСообщение)
	
	МеткаВремени = РаботаСДатой.ВМеткуВремени(ДатаСобытия);
		
	СообщениеRMQ = Новый СообщениеRMQ;
	СообщениеRMQ.Параметр("КлючСоотвествия", КлючСоответствия)
				.Параметр("МоментВремени", МеткаВремени);
	
	СообщениеRMQ.КлючМаршрутизации = КлючМаршрутизации;
	СообщениеRMQ.ДанныеСообщения = ФорматированноеСообщение;

	КлиентRMQ.ОтправитьСообщениеRMQ(СообщениеRMQ);

КонецПроцедуры

// Устанавливает свойство аппендера, заданное в конфигурационном файле
//
Процедура УстановитьСвойство(Знач ИмяСвойства, Знач Значение) Экспорт

КонецПроцедуры // УстановитьСвойство()


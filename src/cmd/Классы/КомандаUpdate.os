#Использовать "../../core"

//    Copyright 2018 khorevaa
// 
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
// 
//        http://www.apache.org/licenses/LICENSE-2.0
// 
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

Процедура ОписаниеКоманды(Команда) Экспорт
	
	Команда.Опция("u db-user", "", "пользователь информационной базы")
				.ВОкружении("DB_USER");
	
	Команда.Опция("p db-pwd", "", "пароль пользователя информационной базы")
				.ВОкружении("DB_PASSWORD IB_PWD");

	Команда.Опция("U uc-code", "", "ключ разрешения запуска")
				.ВОкружении("DB_PASSWORD IB_PWD");

	Команда.Опция("v v8version", "8.3", "версия платформы для запуска")
				.ВОкружении("DB_PASSWORD IB_PWD");

	Команда.Опция("L load-cf", Ложь, "загрузка конфигурации вместо обновления")
				.ВОкружении("DB_PASSWORD IB_PWD");

	Команда.Опция("D update-dynamic", Ложь, "использовать динамическое обновление")
				.ВОкружении("DB_PASSWORD IB_PWD");
	
	Команда.Опция("W update-warnings-as-errors update-wae", Ложь, "при обновлении предупреждения как ошибки")
				.ВОкружении("DB_PASSWORD IB_PWD");

	Команда.Опция("S update-server", Истина, "использовать обновление на сервере")
				.ВОкружении("DB_PASSWORD IB_PWD");

	Команда.Опция("E update-extension", "", "обновление расширения")
				.ВОкружении("DB_PASSWORD IB_PWD");

	Команда.Опция("B block-db", Ложь, "заблокировать информационную базу перед обновлением")
				.ВОкружении("DB_PASSWORD IB_PWD");

	Команда.Опция("cluster-user", Ложь, "пользователь для подключения к кластеру сервера 1С")
				.ВОкружении("DB_PASSWORD IB_PWD");
	
	Команда.Опция("cluster-pwd", Ложь, "пароль пользователя для подключения к кластеру сервера 1С")
				.ВОкружении("DB_PASSWORD IB_PWD");

	Команда.Опция("cluster-port", 1545, "порт для подключения кластеру сервера 1С")
				.ВОкружении("DB_PASSWORD IB_PWD");

	Команда.Опция("run-after", "", "путь к обработке для запуска перед выполнением обновления")
				.ВОкружении("DB_PASSWORD IB_PWD");
	Команда.Опция("run-before", "", "путь к обработке для запуска после выполнения обновления")
				.ВОкружении("DB_PASSWORD IB_PWD");

	Команда.Аргумент("DBCONNECTION", "", "Строка подключения к информационной базе")
				.ТСтрока();

	Команда.Аргумент("PATH", "", "Путь к файлу или каталогу обновления");

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач Команда) Экспорт

	СтрокаПодключения	= Команда.ЗначениеАргумента("DBCONNECTION");
	ПутьКОбновлению		= Команда.ЗначениеАргумента("PATh");
	
	КлючРазрешенияЗапуска		= Команда.ЗначениеОпции("uc-code");
	ПарольПользователяХранилища	= Команда.ЗначениеОпции("db-user");

	ПользовательИБ	= Команда.ЗначениеОпции("db-user");
	ПарольИБ	= Команда.ЗначениеОпции("db-pwd");
	ВерсияПлатформы = Команда.ЗначениеОпции("v8version");
	ЗагрузкаКонфигурацииВместоОбновления = Команда.ЗначениеОпции("load-cf");
	
	ПутьКОбработкеПередОбновлением = Команда.ЗначениеОпции("run-after");
	ПутьКОбработкеПослеОбновления = Команда.ЗначениеОпции("run-before");

	БлокировкаСеансов = Команда.ЗначениеОпции("block-db");

	НастройкаОбновления = Новый НастройкаОбновления("РазовыйЗапуск");
	НастройкаОбновления.УстановитьКаталогКешаФайлов(ПараметрыПриложения.КаталогКешаДанныхПриложения());
	НастройкаОбновления.СтрокаПодключения = СтрШаблон("/F%1", СтрокаПодключения);

	НастройкаОбновления.БлокировкаСеансов = БлокировкаСеансов; // Булево, признак блокировки пользователей
	НастройкаОбновления.ЗагрузкаКонфигурацииВместоОбновления = ЗагрузкаКонфигурацииВместоОбновления; // Булево
	
	НастройкаОбновления.АвторизацияВИнфомарционнойБазе(ПользовательИБ, ПарольИБ);
	НастройкаОбновления.КлючРазрешенияЗапуска = КлючРазрешенияЗапуска;
	НастройкаОбновления.ВерсияПлатформы = ВерсияПлатформы;

	НастройкаОбновления.ПутьКОбработкеПередОбновлением = ПутьКОбработкеПередОбновлением;
	НастройкаОбновления.ПутьКОбработкеПослеОбновления = ПутьКОбработкеПослеОбновления;

	НастройкаОбновления.УстановитьПутьКФайлуОбновления(ПутьКОбновлению); // Строка, путь к файлу или каталогу содержащему обновление

	МенеджерОбновления = Новый МенеджерОбновления;
	РезультатВыполнения = МенеджерОбновления.ОбновлениеПоНастройке(НастройкаОбновления);

	Если НЕ РезультатВыполнения.Выполнено Тогда
		ВызватьИсключение РезультатВыполнения.ОписаниеОшибки;
	КонецЕсли;

	Сообщить("Обновление выполнено");

КонецПроцедуры